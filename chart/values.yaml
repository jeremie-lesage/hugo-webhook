replicaCount: 1

image:
  ## Nginx image
  nginxRepository: nginx
  ## image tag for the nginx image
  nginxVersion: latest
  ## webhook docker file
  hookRepository: rg.fr-par.scw.cloud/jeci/hugo-webhook
  ## image tag for the webhook image
  hookRepositoryVersion: 0.4.6
  pullPolicy: IfNotPresent

git:
  ## The ssh private key in order to git pull/clone when using ssh transport
  sshPrivateKey: ""
  ## When it's set, the sshPrivateKey parameter is ignored
  existingSshPrivateKeySecret: ""
  ## When using http transport, the git provider, GITHUB, GITLAB, or GITEA.
  provider: "PUBLIC"
  ## HTTP or SSH
  transport: "HTTP"
  ## This is the ~/.git-credentials file as describe in  https://git-scm.com/docs/gitcredentials
  gitCredentials: ""
  existingGitCredentials: ""
  ## Nasy setting, dont try this unless you're pretty sure of it.
  http_insecure: "FALSE"
  ## This is the repo url, note that there is no schema.
  repoUrl: github.com/jfardello/hugo-webhook
  ## Hugo will CWD here before build.
  repoContentPath: ""
  ## Branch that will be pulled/cloned.
  repoBranch: "master"
  ## Destination of the source files.
  cloneDest: "/srv/src"
  ## Preserve src, successive hook calls will pull instead of clone.
  preserveSrc: "TRUE"
  ##  hugo or mkdocs
  projectType: "hugo"
  ## Do we serve many branches (dev) or only one branch (prod)
  manyBranches: "FALSE"

ephemeral:
  ## Where to mount the ephemeral hostPath.
  mountTo: /srv

target:
  ## Public Uri (without leading slash)
  serverUri: https://localhost
  ## Base Url of the target site.
  baseUrl: /
  ## Destination of the html site (plus baseUrl for mkDocs).
  baseDir: /srv/static
  ## Extra params passed to the hugo/mkdocs build.
  params: ""

hooks:
  ## url prefix to use for served hooks (protocol://yourserver:port/PREFIX/:hook-id)
  urlPrefix: "hooks"
  ## path to the json or yaml file containing defined hooks the webhook should serve
  configFile: "/etc/webhook/hooks.yaml"
  ## True if hook is sent by Gitlab
  gitlabHook: false
  ## Secret token X-Gitlab-Token
  gitlabToken: ""
  ##  Must be int
  gitlabProjectId: ~
  ## Comments to activate the deployment
  gitlabTriggerMessage: ""

matrix:
  server: https://matrix.org

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  ##  Specifies whether a service account should be created
  create: true
  annotations: {}
  ##  The name of the service account to use.
  ##  If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 80
  hookPort: 9000
ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
  tls: []

resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
